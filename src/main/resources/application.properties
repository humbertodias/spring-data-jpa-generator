spring.main.banner-mode=off
#spring.datasource.initialize=true

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mysql
spring.datasource.username=root
spring.datasource.password=root

spring.freemarker.charset=UTF-8
spring.freemarker.template-loader-path=classpath:/templates

# Enabled?
codegen.enabled=true

#Database to be generated
codegen.tableSchema=mysql

# Table prefix

#codegen.tablePrefix=lc_core_
codegen.tablePrefix=
codegen.module=core
## Separate multiple tables with commas
#codegen.tables=lc_core_test
codegen.tables=


#codegen.tablePrefix=lc_
##codegen.module=basis
##codegen.tables=lc_broadcast,lc_broadcast_image,lc_broadcast_relation

# Excluded fields
#codegen.excludeColumn=creator,createDate,lastModifier,lastModDate,creatorName,lastModifierName
codegen.excludeColumn=

#Overwrite existing code
codegen.output.entity.overwrite=true
#Code output directory
codegen.output.entity.path=src/main/java
#Package names
codegen.output.entity.package=cn.xxxxxx.domain.${codegen.module}
#Base class
codegen.output.entity.baseclass=java.lang.Object
#codegen.output.entity.baseclass=cn.xxxxxx.domain.BaseDomain

codegen.output.repository.overwrite=false
codegen.output.repository.path=src/main/java
codegen.output.repository.package=cn.xxxxxx.repository.${codegen.module}
#Time is limited, temporarily not realized
#codegen.output.repository.baseclass=cn.xxxxxx.repository.IRepository<{Entity},{PK}>

codegen.output.service.overwrite=false
codegen.output.service.path=src/main/java
codegen.output.service.package=cn.xxxxxx.service.${codegen.module}
#codegen.output.service.baseclass=cn.xxxxxx.service.IService<{Entity},{PK}>

codegen.output.serviceimpl.overwrite=false
codegen.output.serviceimpl.path=src/main/java
codegen.output.serviceimpl.package=cn.xxxxxx.service.impl.${codegen.module}
#codegen.output.serviceimpl.baseclass=cn.xxxxxx.AbstractService<{Entity},{PK}>

codegen.output.controller.overwrite=false
codegen.output.controller.path=src/main/java
codegen.output.controller.package=cn.xxxxxx.controller.${codegen.module}


## MySQL and JAVA type mapping
## http://www.cnblogs.com/waterystone/p/6226356.html
codegen.column-type-mapping[bit]=byte[]
codegen.column-type-mapping[tinyint]=Integer
codegen.column-type-mapping[smallint]=Integer
codegen.column-type-mapping[mediumint]=Integer
codegen.column-type-mapping[int]=Long
codegen.column-type-mapping[integer]=Long
codegen.column-type-mapping[bigint]=Long
codegen.column-type-mapping[float]=Float
codegen.column-type-mapping[double]=Double
codegen.column-type-mapping[decimal]=java.math.BigDecimal
codegen.column-type-mapping[date]=java.util.Date
codegen.column-type-mapping[datetime]=java.util.Date
codegen.column-type-mapping[timestamp]=java.util.Date
codegen.column-type-mapping[time]=java.sql.Time
codegen.column-type-mapping[char]=String
codegen.column-type-mapping[varchar]=String
codegen.column-type-mapping[binary]=byte[]
codegen.column-type-mapping[varbinary]=byte[]
codegen.column-type-mapping[tinyblob]=byte[]
codegen.column-type-mapping[tinytext]=String
codegen.column-type-mapping[blob]=byte[]
codegen.column-type-mapping[text]=String
codegen.column-type-mapping[mediumblob]=byte[]
codegen.column-type-mapping[mediumtext]=String
codegen.column-type-mapping[longblob]=byte[]
codegen.column-type-mapping[longtext]=String
codegen.column-type-mapping[enum]=String
codegen.column-type-mapping[set]=String
codegen.column-type-mapping[json]=String